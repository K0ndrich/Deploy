# Внутри ето файла саписываються инструкции для запуска сразу несколько контейнеров сразу 

# version указывает версию нашего docker-compose
version: '3.8'

# services описывают работу всех docker контейнеров
services:
  # указываем название сервиса , можна вибирать любое название
  django:
    # берем все настройки для нашего сервиса django из нашего Dockerfile
    build: . 
    # указываме название для текущего контейнера, который будет запускаться из нашего сервиса
    container_name: django:5.0.4
    # command указываме команды которые будут выполняться при запуске текущего контейнера
    command: python manage.py runserver 0.0.0.0:8000
    # позвоялет перекидывать файлы из локального проекта в текущий сервис(контейнер)
    # перекидываем проект в контейнер созданный в Dockerfile
    volumes:
      - .:my_folder
    # указываем связь по порту локального пк и нашего django
    # первое значение - локальная базы : второе значение база в нашем сервисе
    porst:
      - "8000:8000"
    # соединяем текущий сервис Django и сервис postgreSQL по названию его контейнера
    # теперь django может обращаться к базе данных, которая лежит в контейнере postgres
    depends_on:
      - postgres

  
  
  # в текущем сервисе запускаем базу данных 
  postgres-db:
    # указываем образ, который будет основой нашего текущего(одного) сервиса
    image: postgres:latest
    container_name: postgres
    # environment внутри храняться переменные, которые нужны для нормальной работы текущего сервиса
    # переменные берутьвся из описания основного образа для нашего сервиса
    environment:
      - POSTGRES_USER: kondrich
      - POSTGRES_PASSWORD: 1234
      # название для нашой базы данных
      - POSTGRES_DB: my_test_db
    ports:
      # указываем связь по порту локальной базы и базы в сервисе
      - "5432:5432"

  